{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chathura Lakshan\\\\Music\\\\mindmentor-portfolio\\\\src\\\\components\\\\Carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport './Carousel.css';\n\n// Import images from assets folder\nimport dashboardView from '../assets/images/dashboard-view.jpg';\nimport studentInterface from '../assets/images/student-interface.jpg';\nimport doctorRecommendation from '../assets/images/doctor-recommendation.jpg';\nimport studyPlan from '../assets/images/study-plan.jpg';\nimport academicForm from '../assets/images/academic-form.jpg';\nimport musicPlaylist from '../assets/images/music-playlist.jpg';\nimport profile from '../assets/images/profile.jpg';\nimport setting from '../assets/images/setting.jpg';\n\n// Image mapping object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageMap = {\n  'dashboard-view.jpg': dashboardView,\n  'student-interface.jpg': studentInterface,\n  'doctor-recommendation.jpg': doctorRecommendation,\n  'study-plan.jpg': studyPlan,\n  'academic-form.jpg': academicForm,\n  'music-playlist.jpg': musicPlaylist,\n  'profile.jpg': profile,\n  'setting.jpg': setting\n};\nconst Carousel = ({\n  images\n}) => {\n  _s();\n  const carouselRef = useRef(null);\n  useEffect(() => {\n    // Auto-scroll the carousel every 5 seconds\n    const interval = setInterval(() => {\n      if (carouselRef.current) {\n        const scrollAmount = carouselRef.current.scrollLeft + 320; // Width of image + gap\n        const maxScroll = carouselRef.current.scrollWidth - carouselRef.current.clientWidth;\n        if (scrollAmount >= maxScroll) {\n          carouselRef.current.scrollTo({\n            left: 0,\n            behavior: 'smooth'\n          });\n        } else {\n          carouselRef.current.scrollTo({\n            left: scrollAmount,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel\",\n      ref: carouselRef,\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageMap[image.filename] || studentInterface // Fallback to studentInterface if image not found\n        ,\n        alt: image.alt\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"tqI5RslTGVDAuq9aDlmVCnZoZD8=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useRef","useEffect","dashboardView","studentInterface","doctorRecommendation","studyPlan","academicForm","musicPlaylist","profile","setting","jsxDEV","_jsxDEV","imageMap","Carousel","images","_s","carouselRef","interval","setInterval","current","scrollAmount","scrollLeft","maxScroll","scrollWidth","clientWidth","scrollTo","left","behavior","clearInterval","className","children","ref","map","image","index","src","filename","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Chathura Lakshan/Music/mindmentor-portfolio/src/components/Carousel.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './Carousel.css';\r\n\r\n// Import images from assets folder\r\nimport dashboardView from '../assets/images/dashboard-view.jpg';\r\nimport studentInterface from '../assets/images/student-interface.jpg';\r\nimport doctorRecommendation from '../assets/images/doctor-recommendation.jpg';\r\nimport studyPlan from '../assets/images/study-plan.jpg';\r\nimport academicForm from '../assets/images/academic-form.jpg';\r\nimport musicPlaylist from '../assets/images/music-playlist.jpg';\r\nimport profile from '../assets/images/profile.jpg';\r\nimport setting from '../assets/images/setting.jpg';\r\n\r\n// Image mapping object\r\nconst imageMap = {\r\n  'dashboard-view.jpg': dashboardView,\r\n  'student-interface.jpg': studentInterface,\r\n  'doctor-recommendation.jpg': doctorRecommendation,\r\n  'study-plan.jpg': studyPlan,\r\n  'academic-form.jpg': academicForm,\r\n  'music-playlist.jpg': musicPlaylist,\r\n  'profile.jpg': profile,\r\n  'setting.jpg': setting\r\n};\r\n\r\nconst Carousel = ({ images }) => {\r\n  const carouselRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    // Auto-scroll the carousel every 5 seconds\r\n    const interval = setInterval(() => {\r\n      if (carouselRef.current) {\r\n        const scrollAmount = carouselRef.current.scrollLeft + 320; // Width of image + gap\r\n        const maxScroll = carouselRef.current.scrollWidth - carouselRef.current.clientWidth;\r\n        \r\n        if (scrollAmount >= maxScroll) {\r\n          carouselRef.current.scrollTo({ left: 0, behavior: 'smooth' });\r\n        } else {\r\n          carouselRef.current.scrollTo({ left: scrollAmount, behavior: 'smooth' });\r\n        }\r\n      }\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <div className=\"carousel\" ref={carouselRef}>\r\n        {images.map((image, index) => (\r\n          <img \r\n            key={index}\r\n            src={imageMap[image.filename] || studentInterface} // Fallback to studentInterface if image not found\r\n            alt={image.alt}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,gBAAgB;;AAEvB;AACA,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,gBAAgB,MAAM,wCAAwC;AACrE,OAAOC,oBAAoB,MAAM,4CAA4C;AAC7E,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,OAAO,MAAM,8BAA8B;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG;EACf,oBAAoB,EAAEV,aAAa;EACnC,uBAAuB,EAAEC,gBAAgB;EACzC,2BAA2B,EAAEC,oBAAoB;EACjD,gBAAgB,EAAEC,SAAS;EAC3B,mBAAmB,EAAEC,YAAY;EACjC,oBAAoB,EAAEC,aAAa;EACnC,aAAa,EAAEC,OAAO;EACtB,aAAa,EAAEC;AACjB,CAAC;AAED,MAAMI,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,WAAW,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIF,WAAW,CAACG,OAAO,EAAE;QACvB,MAAMC,YAAY,GAAGJ,WAAW,CAACG,OAAO,CAACE,UAAU,GAAG,GAAG,CAAC,CAAC;QAC3D,MAAMC,SAAS,GAAGN,WAAW,CAACG,OAAO,CAACI,WAAW,GAAGP,WAAW,CAACG,OAAO,CAACK,WAAW;QAEnF,IAAIJ,YAAY,IAAIE,SAAS,EAAE;UAC7BN,WAAW,CAACG,OAAO,CAACM,QAAQ,CAAC;YAAEC,IAAI,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAS,CAAC,CAAC;QAC/D,CAAC,MAAM;UACLX,WAAW,CAACG,OAAO,CAACM,QAAQ,CAAC;YAAEC,IAAI,EAAEN,YAAY;YAAEO,QAAQ,EAAE;UAAS,CAAC,CAAC;QAC1E;MACF;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACX,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKkB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCnB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAACE,GAAG,EAAEf,WAAY;MAAAc,QAAA,EACxChB,MAAM,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBvB,OAAA;QAEEwB,GAAG,EAAEvB,QAAQ,CAACqB,KAAK,CAACG,QAAQ,CAAC,IAAIjC,gBAAiB,CAAC;QAAA;QACnDkC,GAAG,EAAEJ,KAAK,CAACI;MAAI,GAFVH,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAlCIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}