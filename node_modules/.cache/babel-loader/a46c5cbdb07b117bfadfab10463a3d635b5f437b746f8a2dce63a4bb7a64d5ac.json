{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chathura Lakshan\\\\Music\\\\mindmentor-portfolio\\\\src\\\\components\\\\Carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport './Carousel.css';\n\n// Import placeholder images\nimport dashboardImg from '../assets/images/dashboard-view.jpg';\nimport studentInterfaceImg from '../assets/images/student-interface.jpg';\nimport doctorRecommendationImg from '../assets/images/doctor-recommendation.jpg';\nimport liveMonitoringImg from '../assets/images/live-monitoring.jpg';\n\n// Image mapping object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageMap = {\n  'dashboard.jpg': dashboardImg,\n  'student-interface.jpg': studentInterfaceImg,\n  'doctor-recommendation.jpg': doctorRecommendationImg,\n  'live-monitoring.jpg': liveMonitoringImg\n};\nconst Carousel = ({\n  images\n}) => {\n  _s();\n  const carouselRef = useRef(null);\n  useEffect(() => {\n    const carousel = carouselRef.current;\n    if (!carousel) return;\n\n    // Auto-scroll function\n    const autoScroll = () => {\n      if (carousel.scrollLeft >= carousel.scrollWidth - carousel.clientWidth) {\n        // If we're at the end, go back to the beginning\n        carousel.scrollLeft = 0;\n      } else {\n        // Otherwise, scroll right\n        carousel.scrollLeft += 270; // Same as the scroll amount in the original function\n      }\n    };\n\n    // Set up auto-scroll interval\n    const intervalId = setInterval(autoScroll, 2000); // Auto-scroll every 2 seconds\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Fallback image for development\n  const fallbackImage = 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22250%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20250%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_18e2ea3d7e8%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_18e2ea3d7e8%22%3E%3Crect%20width%3D%22250%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2292.5%22%20y%3D%2296.3%22%3EMindMentor%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel\",\n      ref: carouselRef,\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageMap[image.filename] || fallbackImage,\n        alt: image.alt\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"tqI5RslTGVDAuq9aDlmVCnZoZD8=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useRef","useEffect","dashboardImg","studentInterfaceImg","doctorRecommendationImg","liveMonitoringImg","jsxDEV","_jsxDEV","imageMap","Carousel","images","_s","carouselRef","carousel","current","autoScroll","scrollLeft","scrollWidth","clientWidth","intervalId","setInterval","clearInterval","fallbackImage","className","children","ref","map","image","index","src","filename","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Chathura Lakshan/Music/mindmentor-portfolio/src/components/Carousel.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './Carousel.css';\r\n\r\n// Import placeholder images\r\nimport dashboardImg from '../assets/images/dashboard-view.jpg';\r\nimport studentInterfaceImg from '../assets/images/student-interface.jpg';\r\nimport doctorRecommendationImg from '../assets/images/doctor-recommendation.jpg';\r\nimport liveMonitoringImg from '../assets/images/live-monitoring.jpg';\r\n\r\n// Image mapping object\r\nconst imageMap = {\r\n  'dashboard.jpg': dashboardImg,\r\n  'student-interface.jpg': studentInterfaceImg,\r\n  'doctor-recommendation.jpg': doctorRecommendationImg,\r\n  'live-monitoring.jpg': liveMonitoringImg\r\n};\r\n\r\nconst Carousel = ({ images }) => {\r\n  const carouselRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const carousel = carouselRef.current;\r\n    if (!carousel) return;\r\n\r\n    // Auto-scroll function\r\n    const autoScroll = () => {\r\n      if (carousel.scrollLeft >= carousel.scrollWidth - carousel.clientWidth) {\r\n        // If we're at the end, go back to the beginning\r\n        carousel.scrollLeft = 0;\r\n      } else {\r\n        // Otherwise, scroll right\r\n        carousel.scrollLeft += 270; // Same as the scroll amount in the original function\r\n      }\r\n    };\r\n\r\n    // Set up auto-scroll interval\r\n    const intervalId = setInterval(autoScroll, 2000); // Auto-scroll every 2 seconds\r\n\r\n    // Clean up interval on component unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // Fallback image for development\r\n  const fallbackImage = 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22250%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20250%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_18e2ea3d7e8%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_18e2ea3d7e8%22%3E%3Crect%20width%3D%22250%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2292.5%22%20y%3D%2296.3%22%3EMindMentor%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <div className=\"carousel\" ref={carouselRef}>\r\n        {images.map((image, index) => (\r\n          <img \r\n            key={index} \r\n            src={imageMap[image.filename] || fallbackImage} \r\n            alt={image.alt} \r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,gBAAgB;;AAEvB;AACA,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,mBAAmB,MAAM,wCAAwC;AACxE,OAAOC,uBAAuB,MAAM,4CAA4C;AAChF,OAAOC,iBAAiB,MAAM,sCAAsC;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG;EACf,eAAe,EAAEN,YAAY;EAC7B,uBAAuB,EAAEC,mBAAmB;EAC5C,2BAA2B,EAAEC,uBAAuB;EACpD,qBAAqB,EAAEC;AACzB,CAAC;AAED,MAAMI,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGD,WAAW,CAACE,OAAO;IACpC,IAAI,CAACD,QAAQ,EAAE;;IAEf;IACA,MAAME,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAIF,QAAQ,CAACG,UAAU,IAAIH,QAAQ,CAACI,WAAW,GAAGJ,QAAQ,CAACK,WAAW,EAAE;QACtE;QACAL,QAAQ,CAACG,UAAU,GAAG,CAAC;MACzB,CAAC,MAAM;QACL;QACAH,QAAQ,CAACG,UAAU,IAAI,GAAG,CAAC,CAAC;MAC9B;IACF,CAAC;;IAED;IACA,MAAMG,UAAU,GAAGC,WAAW,CAACL,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;;IAElD;IACA,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,aAAa,GAAG,+rBAA+rB;EAErtB,oBACEf,OAAA;IAAKgB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCjB,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAACE,GAAG,EAAEb,WAAY;MAAAY,QAAA,EACxCd,MAAM,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA;QAEEsB,GAAG,EAAErB,QAAQ,CAACmB,KAAK,CAACG,QAAQ,CAAC,IAAIR,aAAc;QAC/CS,GAAG,EAAEJ,KAAK,CAACI;MAAI,GAFVH,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzCIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}